version: 2.1
orbs:
  aws-cli: circleci/aws-cli@4.1.3

jobs:
    run-database-migration:
        steps:
            - run:
                name: Run Script
                command: |
                schemachange -f migrations -a ottaxsx-cq08716 -u RADU9 -r ACCOUNTADMIN -w COMPUTE_WH -d TC2_TEST -c TC2_TEST.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table
                
workflows:
  build-and-deploy-develop:
    jobs:
      - aws-ecr/build_and_push_image:
          auth:
            - aws-cli/setup:
                region: eu-west-1
          repo: "${AWS_RESOURCE_NAME}"
          tag: "${CIRCLE_SHA1}"
          filters:
            branches:
              only:
                - main
      - aws-ecs/deploy_service_update:
          requires:
            - aws-ecr/build_and_push_image
          auth:
            - aws-cli/setup:
                region: eu-west-1
          family: "${AWS_RESOURCE_NAME}"
          cluster: SnowflakeDemoCluster
          container_image_name_updates: "container=${AWS_RESOURCE_NAME},tag=${CIRCLE_SHA1}"
          filters:
            branches:
              only:
                - main
          context: snowflake-dev


# trigger:
#   branches:
#     include:
#     - main
#   paths:
#     include:
#     - /migrations
# pool:
#   vmImage: 'ubuntu-latest'
# variables:
# - group: demo-variables
# steps:
# - task: UsePythonVersion@0
#   displayName: 'Use Python 3.8.x'
#   inputs:
#     versionSpec: '3.8.x'
# - task: Bash@3
#   inputs:
#     targetType: 'inline'
#     script: |
#       echo 'Starting bash task'
#       echo "PROJECT_FOLDER $(PROJECT_FOLDER)"
#       python --version
#       echo 'Step 1: Installing schemachange'
#       pip install schemachange --upgrade
#       echo 'Step 2: Running schemachange'
#       schemachange -f migrations -a ottaxsx-cq08716 -u RADU9 -r ACCOUNTADMIN -w COMPUTE_WH -d TC2_TEST -c TC2_TEST.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table
#   env:
#     SNOWFLAKE_PASSWORD: $(SF_PASSWORD)